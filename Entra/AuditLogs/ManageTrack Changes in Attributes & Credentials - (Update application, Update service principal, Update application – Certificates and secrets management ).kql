// Objective: Detects changes to application or service principal attributes in Entra ID (AuditLogs; app/service principal update operations).
// Surfaces before/after values for critical changes to credentials, secrets, URIs, or permissions for privileged apps.
//
// Supports ICAM Pillar: "Manage/Track Changes in Attributes & Credentials"
// Category: Privileged Identity & Credential Management (PIM)
//
// This query identifies changes made to applications or service principals in Entra ID.
// It focuses on:
// - Certificate & secret modifications (high-risk for app credentials)
// - Reply URL, redirect URI, or permissions scope changes
// - Initiators who are privileged (PIM users or app owners)
//
// Key Characteristics:
// - Filters for relevant update operations (application and service principal)
// - Expands modified properties for before/after context
// - Returns one row per attribute change for audit/visualization
//
// Notes:
// - This supports PIM because managing app identities, secrets, and access scopes 
//   is considered privileged activity.
// - Use dynamic filtering to track only apps managed under a privileged model 
//   (e.g., enterprise critical apps or high-scope app registrations).
// ----- Part 0: Dynamic Targeting (Application Modifications) -----
// To narrow down to specific app IDs or initiators, populate the arrays below; leave empty for all.
let TargetAppIds = dynamic([]);        // e.g., ["app-guid-123", "app-guid-456"]
let TargetInitiators = dynamic([]);    // e.g., ["admin@domain.com"]
// ----- Part 1: Filter for Relevant Application Modification Events -----
AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName in (
    "Update application", 
    "Update service principal", 
    "Update application – Certificates and secrets management"
)
// ----- Part 2: Parse Target Info and Modified Properties -----
| extend
    TargetResource = tostring(TargetResources[0]),
    AppId = tostring(TargetResources[0].id),
    AppDisplayName = tostring(TargetResources[0].displayName),
    InitiatedByUser = tostring(InitiatedBy.user.userPrincipalName),
    Operation = OperationName
| mv-expand ModifiedProperty = parse_json(tostring(TargetResources[0].modifiedProperties))
// ----- Part 3: Parse Attribute Changes -----
| extend
    AttributeName = tostring(ModifiedProperty.displayName),
    OldValue = tostring(ModifiedProperty.oldValue),
    NewValue = tostring(ModifiedProperty.newValue),
    DisplayName = strcat(AppDisplayName, " (", AppId, ")")
// ----- Part 4: Apply Targeting Logic -----
| where isnotempty(InitiatedByUser)
| where array_length(TargetAppIds) == 0 or AppId in (TargetAppIds)
| where array_length(TargetInitiators) == 0 or InitiatedByUser in (TargetInitiators)
// ----- Part 5: Final Output -----
| distinct TimeGenerated, OperationName, InitiatedByUser, DisplayName, Operation, AttributeName, OldValue, NewValue, ['Target-Resource'] = TargetResource
| sort by TimeGenerated desc
| take 500
