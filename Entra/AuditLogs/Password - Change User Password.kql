// Objective: Detects user password changes in Entra ID using AuditLogs.
//
// ----- Part 0: Analyst-Driven Targeting (Optional) -----
// Leave arrays empty to return all events, or populate with UPNs for targeted filtering.
//
let TargetUserUPNs = dynamic([]);            // e.g., ["user1@domain.com"]
let InitiatedByUserUPNs = dynamic([]);       // e.g., ["admin@domain.com"]
//
// ----- Part 1: Filter for Password Change Events -----
// Focus on user password changes from AuditLogs.
//
AuditLogs
| where TimeGenerated > ago(30d)
| where OperationName == "Change user password"
//
// ----- Part 2: Parse and Classify Actors -----
// Determine if change was made by a user, sync process, or app.
//
| extend InitiatorRaw = tostring(InitiatedBy)
| extend InitiatedByUser = tostring(parse_json(InitiatorRaw).user.userPrincipalName)
| extend InitiatedByApp = tostring(parse_json(InitiatorRaw).app.displayName)
| extend InitiatorType = case(
    InitiatedByUser has "Sync", "Sync",
    isnotempty(InitiatedByUser), "User",
    isnotempty(InitiatedByApp), "Application",
    "Unknown"
)
| extend Target = todynamic(TargetResources)[0]
| extend TargetUserUPN = tostring(Target.userPrincipalName)
//
// ----- Part 3: Apply Optional Filtering -----
// Filters on either the actor or target UPN.
//
| where (array_length(TargetUserUPNs) == 0 or TargetUserUPN in (TargetUserUPNs))
| where (array_length(InitiatedByUserUPNs) == 0 or InitiatedByUser in (InitiatedByUserUPNs))
//
// ----- Part 4: Final Output -----
// Final distinct list of password changes.
//
| distinct TimeGenerated, OperationName, ['Service'] = Identity, InitiatorType, InitiatedByUser, InitiatedByApp, TargetUserUPN, Result
| sort by TimeGenerated desc
| take 50
