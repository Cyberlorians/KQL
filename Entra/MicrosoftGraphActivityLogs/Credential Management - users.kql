// Objective: Correlates MicrosoftGraphActivityLogs and AuditLogs to track user update operations in Entra ID.
//
// ----- Part 0: Analyst-Driven Targeting (Optional) -----
// Leave arrays empty to return all results.
//
let TargetedUserUPNs = dynamic([]);   // e.g., ["user@agency.gov"]
let InitiatorUPNs = dynamic([]);      // e.g., ["admin@agency.gov"]
//
// ----- Part 1: Pull Relevant Microsoft Graph POST Requests -----
// Filters only for Graph updates to /users.
//
MicrosoftGraphActivityLogs
| where TimeGenerated > ago(30d)
| where RequestMethod == "POST"
| where RequestUri has "/users"
//
// ----- Part 2: Join with Audit Logs to Enrich Actor Details -----
// Match Graph activity with AuditLogs using UserId --> InitiatedBy.user.id
//
| join kind=inner (
    AuditLogs
    | where TimeGenerated > ago(30d)
    | where OperationName == "Update user"
    | extend InitiatorInfo = todynamic(InitiatedBy)
    | extend TargetInfo = todynamic(TargetResources)[0]
    | extend InitiatorUserId = tostring(InitiatorInfo.user.id)
    | extend
        Status = Result,
        FailureReason = tostring(ResultSignature),
        InitiatorType = case(
            tostring(InitiatorInfo.user.userPrincipalName) has_cs "Sync", "Sync Process",
            isnotempty(InitiatorInfo.user.userPrincipalName), "Interactive User",
            isnotempty(InitiatorInfo.app.displayName), "Application",
            "Other"
        ),
        Initiator = coalesce(
            tostring(InitiatorInfo.user.userPrincipalName),
            tostring(InitiatorInfo.app.displayName)
        ),
        InitiatorIpAddress = tostring(InitiatorInfo.user.ipAddress),
        TargetUserUPN = tostring(TargetInfo.userPrincipalName),
        TargetUserID = tostring(TargetInfo.id)
    | project AuditTime = TimeGenerated, Status, FailureReason, InitiatorType, Initiator, InitiatorIpAddress, TargetUserUPN, TargetUserID, InitiatorUserId
) on $left.UserId == $right.InitiatorUserId
//
// ----- Part 3: Normalize and Apply Filters -----
// Clean column names and optionally filter by initiator or target.
//
| extend TimeGenerated = AuditTime
| where (array_length(TargetedUserUPNs) == 0 or TargetUserUPN in (TargetedUserUPNs))
| where (array_length(InitiatorUPNs) == 0 or Initiator in (InitiatorUPNs))
//
// ----- Part 4: Summarize (latest update per target user) -----
// Ensures we only see the most recent change.
//
| summarize arg_max(TimeGenerated, Status, FailureReason, InitiatorType, Initiator, InitiatorIpAddress, TargetUserUPN, TargetUserID, RequestId, RequestUri, IPAddress, ResponseStatusCode) by TargetUserID
//
// ----- Part 5: Final Output -----
// Readable table showing update attempts per user.
//
| distinct TimeGenerated, Status, FailureReason, InitiatorType, Initiator, InitiatorIpAddress, TargetUserUPN, TargetUserID, RequestId, RequestUri, IPAddress, ResponseStatusCode
| sort by TimeGenerated desc
| take 50
