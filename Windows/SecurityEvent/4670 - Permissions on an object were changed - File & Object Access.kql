// Objective: Tracks permission changes (Event ID 4670) in Windows SecurityEvent logs, with targeted filtering by user SID. Includes GPO requirements and all key enrichment fields for tracking security descriptor changes.
//
// ----- Part 0: Analyst-Driven Targeting (Optional) -----
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic(["S-1-5-..."])
// 
// ----- Part 1: Filter for Relevant 4670 Events -----
// GPO Path: To capture all 4670 events, enable the relevant subcategories:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Registry
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Policy Change > Audit Authentication Policy Change
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Policy Change > Audit Authorization Policy Change
// Note: This event is critical for tracking permission changes on sensitive objects like files, folders, and registry keys.
SecurityEvent
| where TimeGenerated > ago(14d)
| where EventID == 4670
| where Activity == "4670 - Permissions on an object were changed."
//
// ----- Part 2: Data Parsing -----
// This section parses the XML to extract the most valuable fields, including the Security Descriptors.
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    ObjectName = tostring(EventData_xml.EventData.Data[5]['#text']),
    ObjectType = tostring(EventData_xml.EventData.Data[6]['#text']),
    OldSd = tostring(EventData_xml.EventData.Data[8]['#text']),
    NewSd = tostring(EventData_xml.EventData.Data[9]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[11]['#text'])
//
// ----- Part 3: Custom Filtering -----
// This line allows analysts to easily filter out system or service accounts.
| where not(SubjectUserName has_any ('svc', 'MSOL', '$'))
| where not(SubjectUserSid in ("S-1-5-18", "S-1-5-19", "S-1-5-20"))
//
// ----- Part 4: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Analysis & Enrichment -----
// This flag explicitly confirms that the permissions were modified.
// This flag is useful for identifying a targeted user when viewing all results.
| extend
    PermissionsModified = (OldSd != NewSd),
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 6: Final Output -----
// This section presents the unique permission change events, sorted by the most recent time.
| distinct TimeGenerated, IsTargetedUser, Computer, Account = SubjectUserName, SubjectUserSid, ObjectName, ObjectType, ProcessName, PermissionsModified, OldSd, NewSd, Activity
| sort by TimeGenerated desc
| take 50
